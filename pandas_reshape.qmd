
```{python}
import pandas as pd
import plotly.express as px
```


```{python}
# Temperatures dataset
temperatures = pd.DataFrame(
    {
        "country": ["Sweden", "Denmark", "Norway"],
        "1994": [1, 2, 3],
        "1995": [3, 4, 5],
        "1996": [5, 6, 7],
    }
)

# Fuels Wide dataset
fuels_wide = pd.read_csv('oil_per_capita_wide.csv')

# Eurostat Births Wide dataset
euro_births_wide = pd.read_csv('euro_births_wide.csv')

# Contracts dataset
contracts = pd.read_csv('chicago_contracts_20_23.csv')

# Population dataset
population = pd.read_csv('tidyr_population.csv')
```

**#What do Wide and Long mean**


```{python}
temperatures
```

**When to use Long vs Wide data**

**#Wide to Long melt**
```{python}
fuels_long=fuels_wide.melt(id_vars=['Entity','Code'],var_name='year',value_name='oil_consumption').sort_values(by=['Entity','year'])
```


```{python}
fuels_long['year']=fuels_long['year'].str.replace('y_'," ").astype(int)
fuels_long
```
**#Practice**


```{python}
temperatures_long=temperatures.melt(id_vars='country',var_name='year',value_name='avg_temp')
```


```{python}
euro_births_long=euro_births_wide.melt(id_vars='country',var_name='year',value_name='births_count')
euro_births_long['year']=euro_births_long['year'].str.replace('x'," ").astype(int)
euro_births_long
```

**#Using long data for analysis**

```{python}
fuels_long.groupby('Entity')['oil_consumption'].mean()
```
Long data is easier to plot

```{python}
subset=fuels_long.query("Entity in['Peru','Iran','China']")
subset
```

```{python}
px.line(subset,x='year',y='oil_consumption',color='Entity')
```

**#From long to wide with Pivot**


```{python}
contracts_summary=contracts.groupby('state')['year'].value_counts().reset_index()
```


```{python}
contracts_summary.pivot(columns='year',index='state',values='count').reset_index()
```


```{python}
contracts_summary.pivot(columns='state',index='year',values='count').reset_index()
```

**#Practice**


```{python}
temperatures_wide=temperatures_long.pivot(columns='year',index='country',values='avg_temp').reset_index()
temperatures_wide
```


```{python}
population_wide1=population.pivot(columns='year',index='country',values='population').reset_index()
population_wide1
```

```{python}
population_wide2=population.pivot(columns='country',index='year',values='population').reset_index()
population_wide2
```